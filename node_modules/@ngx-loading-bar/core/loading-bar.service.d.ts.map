{"version":3,"file":"loading-bar.service.d.ts","sources":["loading-bar.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA","sourcesContent":["import { NgZone } from '@angular/core';\nimport { LoadingBarState } from './loading-bar.state';\nimport { Observable, OperatorFunction } from 'rxjs';\nimport { LoadingBarConfig } from './loading-bar.config';\nexport declare class LoadingBarService {\n    private platformId;\n    private config;\n    private zone?;\n    private refs;\n    private streams$;\n    readonly value$: Observable<number>;\n    /** @deprecated use `value$` instead. */\n    get progress$(): Observable<number>;\n    constructor(platformId: Object, config?: LoadingBarConfig, zone?: NgZone);\n    /** @deprecated use `useRef` instead. */\n    start(initialValue?: number): void;\n    /** @deprecated use `useRef` instead. */\n    set(value: number): void;\n    /** @deprecated use `useRef` instead. */\n    increment(value?: number): void;\n    /** @deprecated use `useRef` instead. */\n    complete(): void;\n    /** @deprecated use `useRef` instead. */\n    stop(): void;\n    useRef(id?: string): LoadingBarState;\n}\nexport declare function runInZone<T>(zone: NgZone): OperatorFunction<T, T>;\n"]}